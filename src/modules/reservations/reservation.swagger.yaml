openapi: 3.0.0
info:
  title: Reservation API
  version: 1.0.0
  description: API for managing reservations in a movie booking system.
servers:
  - url: http://localhost:3000/api/v1
paths:
  /reservation:
    post:
      summary: Create a new reservation
      tags: [Reservations]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                seats:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
                showTimeId:
                  type: string
                  example: "60d5ec49f1b2c8b8f8e4b8e4"
      responses:
        '201':
          description: Reservation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      userId:
                        type: string
                      showTimeId:
                        type: string
                      seats:
                        type: array
                        items:
                          type: integer
                      totalPrice:
                        type: number
                      status:
                        type: string
        '500':
          description: Error creating reservation

    get:
      summary: Get all reservations for a user
      tags: [Reservations]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of user reservations
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        reservationId:
                          type: string
                        showTime:
                          type: object
                          properties:
                            startAt:
                              type: string
                            endAt:
                              type: string
                            price:
                              type: number
                            movie:
                              type: object
                              properties:
                                name:
                                  type: string
                                duration:
                                  type: integer
                                category:
                                  type: string
                                image:
                                  type: string
                        seats:
                          type: array
                          items:
                            type: integer
                        totalPrice:
                          type: number
                        status:
                          type: string
        '500':
          description: Error fetching reservations

  /reservation/{id}:
    get:
      summary: Get a single reservation by ID
      tags: [Reservations]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the reservation
          schema:
            type: string
      responses:
        '200':
          description: Reservation details
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  userId:
                    type: string
                  showTimeId:
                    type: string
                  seats:
                    type: array
                    items:
                      type: integer
                  totalPrice:
                    type: number
                  status:
                    type: string
        '404':
          description: Reservation not found
        '500':
          description: Error fetching reservation

    put:
      summary: Update a reservation
      tags: [Reservations]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the reservation
          schema:
            type: string
      responses:
        '200':
          description: Updated reservation details
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  userId:
                    type: string
                  showTimeId:
                    type: string
                  seats:
                    type: array
                    items:
                      type: integer
                  totalPrice:
                    type: number
                  status:
                    type: string
        '404':
          description: Reservation not found
        '500':
          description: Error updating reservation

    delete:
      summary: Delete a reservation
      tags: [Reservations]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the reservation
          schema:
            type: string
      responses:
        '200':
          description: Reservation deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Reservation not found
        '500':
          description: Error deleting reservation

  /reservation/admin:
    get:
      summary: Get all reservations (Admin)
      tags: [Reservations]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of all reservations
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        userId:
                          type: string
                        showTimeId:
                          type: string
                        seats:
                          type: array
                          items:
                            type: integer
                        totalPrice:
                          type: number
                        status:
                          type: string
        '500':
          description: Error fetching reservations

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT