openapi: 3.0.0
info:
  title: Cinema API | showtimes
  version: 1.0.0
  description: API documentation for showtimes Endpoints
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Movies
    description: Movie management

paths:
  /movie:
    post:
      tags:
        - Movies
      summary: Create a new movie
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the movie
                  example: "Inception"
                duration:
                  type: string
                  description: The duration of the movie
                  example: "2h 28m"
                description:
                  type: string
                  description: A brief description of the movie
                  example: "A thief who steals corporate secrets through the use of dream-sharing technology."
                genre:
                  type: string
                  description: The genre of the movie
                  enum: [action, comedy, drama, horror, romance, thriller, animation]
                image:
                  type: string
                  description: URL of the movie's poster image
                  example: "http://example.com/image.jpg"
                video:
                  type: string
                  description: URL of the movie's video file
                  example: "http://example.com/video.mp4"
      responses:
        '201':
          description: Movie created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                  message:
                    type: string
        '500':
          description: Error creating movie

    get:
      tags:
        - Movies
      summary: Get all public movies
      parameters:
        - name: search
          in: query
          required: false
          description: Search for a movie by name
          schema:
            type: string
        - name: genre
          in: query
          required: false
          description: Filter movies by genre
          schema:
            type: string
            enum: [action, comedy, drama, horror, romance, thriller, animation]
      responses:
        '200':
          description: List of movies
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        genre:
                          type: string
                        image:
                          type: string
                        rating:
                          type: number
                        duration:
                          type: string
        '500':
          description: Error fetching movies

  /movie/{id}:
    get:
      tags:
        - Movies
      summary: Get a single movie by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Movie ID
          schema:
            type: string
      responses:
        '200':
          description: Movie details
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  genre:
                    type: string
                  image:
                    type: string
                  rating:
                    type: number
                  duration:
                    type: string
                  description:
                    type: string
                  hasStream:
                    type: boolean
                  userRating:
                    type: number
        '404':
          description: Movie not found
        '500':
          description: Error fetching movie

    delete:
      tags:
        - Movies
      summary: Delete a movie
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Movie ID
          schema:
            type: string
      responses:
        '200':
          description: Movie deleted successfully
        '404':
          description: Movie not found
        '500':
          description: Error deleting movie

    put:
      tags:
        - Movies
      summary: Update a movie
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Movie ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                duration:
                  type: string
                description:
                  type: string
                genre:
                  type: string
                  enum: [action, comedy, drama, horror, romance, thriller, animation]
                image:
                  type: string
                video:
                  type: string
      responses:
        '200':
          description: Movie updated successfully
          content:
            application/json:
              schema:
                type: object
        '404':
          description: Movie not found
        '500':
          description: Error updating movie

  /movie/stream/{id}:
    get:
      tags:
        - Movies
      summary: Stream movie video
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Movie ID
          schema:
            type: string
      responses:
        '200':
          description: Streaming video
        '404':
          description: Video not found
        '500':
          description: Error streaming video